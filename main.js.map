{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Todo } from './todo';\nimport {trigger,state,style,animate,transition,group} from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [\n    trigger('itemAnim', [\n      transition(':enter', [\n        style({transform: 'translateX(-100px)'}),\n        animate(350)\n      ]),\n      transition(':leave', [\n        style({transform: 'translateX(300px)'}),\n        animate(350)\n      ]\n      )\n    ])\n  ]\n})\nexport class AppComponent {\n  title = 'Pilot';\n  todovalue: string;\n  list: Todo[];\n\n\nngOnInit(){\n   this.list= [];\n   this.todovalue= \"\";\n }\n\naddItem(){\n   if(this.todovalue !== \"\"){\n    const newItem: Todo ={\n      id: Date.now(),\n      value: this.todovalue,\n      isDone: false\n    };\n    this.list.push(newItem);\n   }\n   this.todovalue= \"\";\n }\n\ndeleteItem(id: number){\n  this.list= this.list.filter(item => item.id !== id);\n}\n\n\n\n  }\n","<div style=\"text-align: center;\">\n  <img src=\"../assets/logo.png\"\n  width=\"100\"\n  height=\"100\"\n  alt=\"my logo\"\n  class=\"logo\">\n  <h1 class=\"app-title\">\n    TODO LIST\n  </h1>\n</div>\n\n<div class=\"container\">\n  Add a TODO\n  <br/>\n  <input type=\"text\" class=\"input_text\" placeholder=\"Type a todo list\" [(ngModel)]=\"todovalue\" (keyup.enter)=\"addItem()\"/>\n  <button class=\"add-btn\" (click)=\"addItem()\">Add</button>\n  <div class=\"list\">\n    <ul>\n      <li *ngFor=\"let item of list\" [@itemAnim]>\n        <input type=\"checkbox\" name=\"isDone\" [(ngModel)]=\"item.isDone\"/>\n        {{item.value}}\n        <button class=\"btn-del\" (click)=\"deleteItem(item.id)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}